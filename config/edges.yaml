hyper-parameters:
  batch_size: 30
  epochs: 30
  in_window_shape: [64,64]
  out_window_shape: [12,12]
  penatly_factor: 0.
  maxoutsize: [1,1,1]
  stride: 12
image-data:
  samples_per_image: 400
  n_validation_samples: 2000
  on_ratio: 0.5
  img_size: [1024,1024]
  n_train_files: None
  n_test_files: 10
  layers_3D: 3
optimizer-data:
  optimizer: 'RMSprop'
  optimizerData:
    learning_rate: 0.001
    rho: 0.9
    epsilon: 1e-4
classifier:
  classifier: 'membrane'
  membrane_edges: 'WideEdges' #GaussianBlur/WideEdges 
theano:
  config:
    mode: FAST_RUN
    floatX: float32
    device: gpu
    nvcc: fastmath
convolution:
  large:
    num_kernels   = [64,64,128]
    kernel_sizes  = [(5, 5), (3, 3), (3,3)]
    maxoutsize    = (2,2,4)
  medium:
    num_kernels   = [64,64,64]
    kernel_sizes  = [(5, 5), (3, 3), (3,3)]
    maxoutsize    = (1,1,1)
  small:
    num_kernels   = [10,10,10]
    kernel_sizes  = [(5, 5), (3, 3), (3,3)]
    maxoutsize    = (1,1,1)
  training-data:
    directory_input: ['data/train-input']
    directory_labels: ['data/train-input']
  load_weights:
    load_n_layers: 5