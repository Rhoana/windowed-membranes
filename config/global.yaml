hyper-parameters:
  batch_size: 30
  epochs: 30
  in_window_shape: [64,64]
  out_window_shape: [12,12]
  penalty_factor: 0.
  stride: 12
  layers_3D: 1
image-data:
  samples_per_image: 400
  n_validation_samples: 2000
  on_ratio: 0.5
  img_size: [1024,1024]
  n_train_files: !!null "None"
  n_test_files: 3
  adaptive_histogram_equalization: !!bool False
  pre_process_only: !!bool False
  pre_process: !!bool True
optimizer-data:
  optimizer: 'RMSprop'
  optimizerData:
    learning_rate: 0.001
    rho: 0.9
    epsilon: 0.0001
classifier:
  classifier: 'synapse_reg'
  membrane_edges: 'WideEdges' #GaussianBlur/WideEdges 
theano:
  config:
    mode: FAST_RUN
    floatX: float32
    device: gpu
    nvcc: fastmath
network:
  large:
    num_kernels: [64,64,128]
    kernel_sizes: [[5, 5], [3, 3], [3,3]]
    maxoutsize: [2,2,4]
  medium:
    num_kernels: [64,64,64]
    kernel_sizes: [[5, 5], [3, 3], [3,3]]
    maxoutsize: [1,1,1]
  small:
    num_kernels: [10,10,10]
    kernel_sizes: [[5, 5], [3, 3], [3,3]]
    maxoutsize: [1,1,1]
  training-data:
    membrane:
      directory_input: ['data/train-input']
      directory_labels: ['data/train-labels']
      folder_name: 'edges'
    synapse:
      directory_input: ['data/train-input','data/AC3-input']
      directory_labels: ['data/train-labels','data/AC3-labels']
      folder_name: 'synapse_pixels'
    synapse_reg:
      directory_input: ['data/train-input','data/AC3-input']
      directory_labels: ['data/train-labels','data/AC3-labels']
      folder_name: 'synapse_windows'
weights:
  load_n_layers: -1
  weights_path: 'parameters/params.dat'
main:
    predict_only: !!bool False
    predict_train_set: !!bool False
    images_from_numpy: !!bool False
    ID_folder: test
